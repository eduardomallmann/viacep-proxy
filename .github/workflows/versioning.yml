name: Versioning

on:
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  AUXILIARY_BRANCH: aux-branch
  REPO_PULL_URL: ${{ github.api_url }}/repos/${{ github.repository }}/pulls

jobs:
  versioning:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write
      pull-requests: write
      repository-projects: write
      checks: write
      deployments: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Prepare Versioning
      run: |
        git config --global user.email "mallmann.edu@gmail.com"
        git config --global user.name "Eduardo Mallmann"
        git config --global push.followTags true
        git checkout -b $AUXILIARY_BRANCH
        git push -u origin $AUXILIARY_BRANCH
    - name: Versioning
      run: |
        echo "REPO_PULL_URL=${{ env.REPO_PULL_URL }}"
        git checkout $AUXILIARY_BRANCH
        mvn --batch-mode release:prepare
    - name: Persist Versioning
      id: persist_versioning
      run: |
        export NUMBER=$(curl --location --request POST '${{ env.REPO_PULL_URL }}' \
        --header 'Accept: Accept: application/vnd.github+json' \
        --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'Content-Type: application/json' \
        --data-raw '{
            "title": "Versioning",
            "body": "Versioning PR",
            "head": "${{ github.repository_owner }}:$AUXILIARY_BRANCH",
            "base": "main"
        }' | jq .number)
        echo "NUMBER=$NUMBER"
        curl --location --request PUT '${{ env.REPO_PULL_URL }}/$NUMBER/merge' \
        --header 'Accept: application/vnd.github+json' \
        --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'
    - name: Clean Failure
      if: ${{ failure() && steps.persist_versioning.conclusion == 'failure' }}
      run: |
        git push origin --delete $(git rev-list --tags --max-count=1)
    - name: Clean Versioning
      if: ${{ always() }}
      run: |
        git push origin --delete $AUXILIARY_BRANCH